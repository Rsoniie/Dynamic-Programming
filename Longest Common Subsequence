*******BRUTE FORCE GET ALL SUBSEQUENCES OF  BOTH AND GET LONGEST COMMON ****************
----------------------------------------------------------------------------------------
************USING MEMOIZATION ***************TC = O(N*M)*******************************


#include <bits/stdc++.h> 
int f(int i, int j, string&str1, string &str2, vector<vector<int>>&dp)
{
  if(i == 0 || j == 0)
  {
    return 0;
  }
  if(dp[i][j] != -1)
  {
    return dp[i][j];
  }
  if(str1[i-1] == str2[j-1])
  {
    return  dp[i][j] =  1+f(i-1, j-1, str1, str2,dp);
  }
  else 
  {
    return   dp[i][j] = max(f(i-1, j, str1, str2, dp), f(i, j-1, str1, str2, dp));
  }

  
}
int getLengthOfLCS(string & str1, string & str2) {
  int n = str1.size();
  int m = str2.size();
  vector<vector<int>> dp(n+1, vector<int>(m+1, -1));
  return f(n, m, str1, str2, dp);
}

---------------------------------------------------------------------------------------------
